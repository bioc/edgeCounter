% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edgeExperiment.R
\name{export.edgeExtract}
\alias{export.edgeExtract}
\title{Export edge distribution data for visualization}
\usage{
export.edgeExtract(
  edgeEx,
  base.path,
  bin.width = 20,
  bin.min = 1,
  smooth.width = NULL,
  seqinfo,
  norm = "epm"
)
}
\arguments{
\item{edgeEx}{A named list of GRanges object containing the BAM edges.
May be created by \code{\link[=edgeExtract]{edgeExtract()}}.}

\item{base.path}{Directory to save the exported files. Note that for
each sample one BIGWIG file will be exported as \verb{\{sampleID\}.bw}.}

\item{bin.width}{Bin width. See Details.}

\item{bin.min}{Bin filter. See Details.}

\item{smooth.width}{If not NULL, smooth the edge positions. See details.}

\item{seqinfo}{Genome sequence info, a \link[GenomeInfoDb:Seqinfo-class]{GenomeInfoDb::Seqinfo} object.}

\item{norm}{Normalization method. Currently supported are
\code{epm_ir}, \code{epm} and \code{none}. Refer to Details for explanation.}
}
\value{
None. Only side effect of writing bigwig files.
}
\description{
\code{export.edgeExtract()} exports edges cached by the
\code{edgeExtract()} function for visualization. It generates bigwig files
for random access. This function relies on Bioconductor \code{rtracklayer}
and will NOT work on Windows.
}
\section{Details}{
Nature of the \code{edgeExperiment()} function family is to generate counts
data for downstream analysis. Apart from differential analysis, which is
supported by various packages such as \code{edgeR} and \code{DESeq2}, visualization
is important for getting intuition of the data and verifying the results.

To support this, \code{export.edgeExtract()} exports BAM edges data to BIGWIG
tracks. The following sections explain exact procedure of this
function in order.
\subsection{Gathering genome size information}{

To generate bigwig files genome lengths must be known. With
\code{seqinfo} parameter the user provides a \link[GenomeInfoDb:Seqinfo-class]{GenomeInfoDb::Seqinfo}
object containing the sequence lengths.
}

\subsection{Counting edges with fixed-width bins}{

The whole genome is divided into fixed-width bins along each seqname.

If \code{smooth.width} is set to a positive integer, edges expanded to
\code{width = smooth.width} centering at the original edge position.

Then, edges are counted w.r.t. the bins using
\code{\link[=edgeExperimentFromCounts]{edgeExperimentFromCounts()}}.
}

\subsection{Normalization of counts}{

Problem: different samples have different numbers of reads. Solution:
calculate 'edges per million (\code{epm})'. It divides all counts
by the total number of edges counted in the ranges. Refer
to \code{\link[=edgeExperimentFromCounts]{edgeExperimentFromCounts()}} for more details.

No normalization: \code{none}.
}

\subsection{BIGWIG conversion with \code{rtracklayer}}{

This function relies on \code{rtracklayer} for Bigwig generation. Refer to
\link[rtracklayer:BigWigFile]{rtracklayer::BigWigFile} for more detail.
}
}

\examples{
\dontrun{
export.edgeExtract(exp, ".", norm = "epm_ir")
}
}
